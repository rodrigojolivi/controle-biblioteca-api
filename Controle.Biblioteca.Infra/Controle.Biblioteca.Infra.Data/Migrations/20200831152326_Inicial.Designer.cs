// <auto-generated />
using System;
using Controle.Biblioteca.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Controle.Biblioteca.Infra.Data.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20200831152326_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Controle.Biblioteca.Domain.Entities.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("624896ea-0c0f-4415-a899-10b50f096146"),
                            Nome = "Paulo Coelho"
                        },
                        new
                        {
                            Id = new Guid("acb18b36-4f45-4a76-b3be-76406e5a7160"),
                            Nome = "Eric Evans"
                        });
                });

            modelBuilder.Entity("Controle.Biblioteca.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bad95dd7-15e0-4c3f-8ec5-9f8e1dd11943"),
                            Descricao = "Livros de ficção",
                            Nome = "Ficção"
                        },
                        new
                        {
                            Id = new Guid("50ada5df-9e37-4e52-836b-89e9be0abf5c"),
                            Descricao = "Livros para estudos",
                            Nome = "Estudo"
                        });
                });

            modelBuilder.Entity("Controle.Biblioteca.Domain.Entities.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<Guid>("IdAutor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAutor");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Controle.Biblioteca.Domain.Entities.Livro", b =>
                {
                    b.HasOne("Controle.Biblioteca.Domain.Entities.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("IdAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Controle.Biblioteca.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
